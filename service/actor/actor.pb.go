// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: service/actor/actor.proto

package actor

import (
	base "github.com/sorawaslocked/ap2final_protos_gen/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FilmographyEntry represents an actor's participation in a specific movie
type FilmographyEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieID   string `protobuf:"bytes,1,opt,name=MovieID,proto3" json:"MovieID,omitempty"`
	Character string `protobuf:"bytes,2,opt,name=Character,proto3" json:"Character,omitempty"` // The character they played (empty for crew)
	Role      string `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`           // "Actor" or crew role (Director, Producer, etc.)
}

func (x *FilmographyEntry) Reset() {
	*x = FilmographyEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmographyEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmographyEntry) ProtoMessage() {}

func (x *FilmographyEntry) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmographyEntry.ProtoReflect.Descriptor instead.
func (*FilmographyEntry) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{0}
}

func (x *FilmographyEntry) GetMovieID() string {
	if x != nil {
		return x.MovieID
	}
	return ""
}

func (x *FilmographyEntry) GetCharacter() string {
	if x != nil {
		return x.Character
	}
	return ""
}

func (x *FilmographyEntry) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

// AgeRange for filtering actors by age
type AgeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgeFrom uint32 `protobuf:"varint,1,opt,name=AgeFrom,proto3" json:"AgeFrom,omitempty"`
	AgeTo   uint32 `protobuf:"varint,2,opt,name=AgeTo,proto3" json:"AgeTo,omitempty"`
}

func (x *AgeRange) Reset() {
	*x = AgeRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgeRange) ProtoMessage() {}

func (x *AgeRange) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgeRange.ProtoReflect.Descriptor instead.
func (*AgeRange) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{1}
}

func (x *AgeRange) GetAgeFrom() uint32 {
	if x != nil {
		return x.AgeFrom
	}
	return 0
}

func (x *AgeRange) GetAgeTo() uint32 {
	if x != nil {
		return x.AgeTo
	}
	return 0
}

// ActorFilter for searching actors based on criteria
type ActorFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *string   `protobuf:"bytes,1,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	FirstName   *string   `protobuf:"bytes,2,opt,name=FirstName,proto3,oneof" json:"FirstName,omitempty"`
	LastName    *string   `protobuf:"bytes,3,opt,name=LastName,proto3,oneof" json:"LastName,omitempty"`
	AgeRange    *AgeRange `protobuf:"bytes,4,opt,name=AgeRange,proto3,oneof" json:"AgeRange,omitempty"`
	Nationality *string   `protobuf:"bytes,5,opt,name=Nationality,proto3,oneof" json:"Nationality,omitempty"`
	MovieID     *string   `protobuf:"bytes,6,opt,name=MovieID,proto3,oneof" json:"MovieID,omitempty"` // Filter actors by a specific movie they were in
	Role        *string   `protobuf:"bytes,7,opt,name=Role,proto3,oneof" json:"Role,omitempty"`       // Filter by role type
	IsDeleted   *bool     `protobuf:"varint,8,opt,name=IsDeleted,proto3,oneof" json:"IsDeleted,omitempty"`
}

func (x *ActorFilter) Reset() {
	*x = ActorFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorFilter) ProtoMessage() {}

func (x *ActorFilter) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorFilter.ProtoReflect.Descriptor instead.
func (*ActorFilter) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{2}
}

func (x *ActorFilter) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *ActorFilter) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *ActorFilter) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *ActorFilter) GetAgeRange() *AgeRange {
	if x != nil {
		return x.AgeRange
	}
	return nil
}

func (x *ActorFilter) GetNationality() string {
	if x != nil && x.Nationality != nil {
		return *x.Nationality
	}
	return ""
}

func (x *ActorFilter) GetMovieID() string {
	if x != nil && x.MovieID != nil {
		return *x.MovieID
	}
	return ""
}

func (x *ActorFilter) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

func (x *ActorFilter) GetIsDeleted() bool {
	if x != nil && x.IsDeleted != nil {
		return *x.IsDeleted
	}
	return false
}

// Create requests and responses
type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName   string                 `protobuf:"bytes,1,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName    string                 `protobuf:"bytes,2,opt,name=LastName,proto3" json:"LastName,omitempty"`
	BirthDate   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=BirthDate,proto3" json:"BirthDate,omitempty"`
	DeathDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=DeathDate,proto3,oneof" json:"DeathDate,omitempty"`
	Nationality string                 `protobuf:"bytes,5,opt,name=Nationality,proto3" json:"Nationality,omitempty"`
	Biography   string                 `protobuf:"bytes,6,opt,name=Biography,proto3" json:"Biography,omitempty"`
	ImageURL    string                 `protobuf:"bytes,7,opt,name=ImageURL,proto3" json:"ImageURL,omitempty"`
	Filmography []*FilmographyEntry    `protobuf:"bytes,8,rep,name=Filmography,proto3" json:"Filmography,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CreateRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CreateRequest) GetBirthDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BirthDate
	}
	return nil
}

func (x *CreateRequest) GetDeathDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DeathDate
	}
	return nil
}

func (x *CreateRequest) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *CreateRequest) GetBiography() string {
	if x != nil {
		return x.Biography
	}
	return ""
}

func (x *CreateRequest) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

func (x *CreateRequest) GetFilmography() []*FilmographyEntry {
	if x != nil {
		return x.Filmography
	}
	return nil
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor *base.Actor `protobuf:"bytes,1,opt,name=Actor,proto3,oneof" json:"Actor,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{4}
}

func (x *CreateResponse) GetActor() *base.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

// Get requests and responses
type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{5}
}

func (x *GetRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor *base.Actor `protobuf:"bytes,1,opt,name=Actor,proto3,oneof" json:"Actor,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{6}
}

func (x *GetResponse) GetActor() *base.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

// GetAll requests and responses
type GetAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllRequest) Reset() {
	*x = GetAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRequest) ProtoMessage() {}

func (x *GetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRequest.ProtoReflect.Descriptor instead.
func (*GetAllRequest) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{7}
}

type GetAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actors []*base.Actor `protobuf:"bytes,1,rep,name=Actors,proto3" json:"Actors,omitempty"`
}

func (x *GetAllResponse) Reset() {
	*x = GetAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllResponse) ProtoMessage() {}

func (x *GetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllResponse.ProtoReflect.Descriptor instead.
func (*GetAllResponse) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllResponse) GetActors() []*base.Actor {
	if x != nil {
		return x.Actors
	}
	return nil
}

// GetAllWithFilter requests and responses
type GetAllWithFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *ActorFilter `protobuf:"bytes,1,opt,name=Filter,proto3" json:"Filter,omitempty"`
}

func (x *GetAllWithFilterRequest) Reset() {
	*x = GetAllWithFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllWithFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllWithFilterRequest) ProtoMessage() {}

func (x *GetAllWithFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllWithFilterRequest.ProtoReflect.Descriptor instead.
func (*GetAllWithFilterRequest) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllWithFilterRequest) GetFilter() *ActorFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetAllWithFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actors []*base.Actor `protobuf:"bytes,1,rep,name=Actors,proto3" json:"Actors,omitempty"`
}

func (x *GetAllWithFilterResponse) Reset() {
	*x = GetAllWithFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllWithFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllWithFilterResponse) ProtoMessage() {}

func (x *GetAllWithFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllWithFilterResponse.ProtoReflect.Descriptor instead.
func (*GetAllWithFilterResponse) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{10}
}

func (x *GetAllWithFilterResponse) GetActors() []*base.Actor {
	if x != nil {
		return x.Actors
	}
	return nil
}

// Update requests and responses
type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FirstName   *string                `protobuf:"bytes,2,opt,name=FirstName,proto3,oneof" json:"FirstName,omitempty"`
	LastName    *string                `protobuf:"bytes,3,opt,name=LastName,proto3,oneof" json:"LastName,omitempty"`
	BirthDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=BirthDate,proto3,oneof" json:"BirthDate,omitempty"`
	DeathDate   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=DeathDate,proto3,oneof" json:"DeathDate,omitempty"`
	Nationality *string                `protobuf:"bytes,6,opt,name=Nationality,proto3,oneof" json:"Nationality,omitempty"`
	Biography   *string                `protobuf:"bytes,7,opt,name=Biography,proto3,oneof" json:"Biography,omitempty"`
	ImageURL    *string                `protobuf:"bytes,8,opt,name=ImageURL,proto3,oneof" json:"ImageURL,omitempty"`
	Filmography []*FilmographyEntry    `protobuf:"bytes,9,rep,name=Filmography,proto3" json:"Filmography,omitempty"`
	IsDeleted   *bool                  `protobuf:"varint,10,opt,name=IsDeleted,proto3,oneof" json:"IsDeleted,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateRequest) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *UpdateRequest) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *UpdateRequest) GetBirthDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BirthDate
	}
	return nil
}

func (x *UpdateRequest) GetDeathDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DeathDate
	}
	return nil
}

func (x *UpdateRequest) GetNationality() string {
	if x != nil && x.Nationality != nil {
		return *x.Nationality
	}
	return ""
}

func (x *UpdateRequest) GetBiography() string {
	if x != nil && x.Biography != nil {
		return *x.Biography
	}
	return ""
}

func (x *UpdateRequest) GetImageURL() string {
	if x != nil && x.ImageURL != nil {
		return *x.ImageURL
	}
	return ""
}

func (x *UpdateRequest) GetFilmography() []*FilmographyEntry {
	if x != nil {
		return x.Filmography
	}
	return nil
}

func (x *UpdateRequest) GetIsDeleted() bool {
	if x != nil && x.IsDeleted != nil {
		return *x.IsDeleted
	}
	return false
}

type UpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor *base.Actor `protobuf:"bytes,1,opt,name=Actor,proto3,oneof" json:"Actor,omitempty"`
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateResponse) GetActor() *base.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

// Delete requests and responses
type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor *base.Actor `protobuf:"bytes,1,opt,name=Actor,proto3,oneof" json:"Actor,omitempty"`
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteResponse) GetActor() *base.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

// Filmography management requests and responses
type AddMovieToFilmographyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorID string            `protobuf:"bytes,1,opt,name=ActorID,proto3" json:"ActorID,omitempty"`
	Entry   *FilmographyEntry `protobuf:"bytes,2,opt,name=Entry,proto3" json:"Entry,omitempty"`
}

func (x *AddMovieToFilmographyRequest) Reset() {
	*x = AddMovieToFilmographyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMovieToFilmographyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMovieToFilmographyRequest) ProtoMessage() {}

func (x *AddMovieToFilmographyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMovieToFilmographyRequest.ProtoReflect.Descriptor instead.
func (*AddMovieToFilmographyRequest) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{15}
}

func (x *AddMovieToFilmographyRequest) GetActorID() string {
	if x != nil {
		return x.ActorID
	}
	return ""
}

func (x *AddMovieToFilmographyRequest) GetEntry() *FilmographyEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type AddMovieToFilmographyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor *base.Actor `protobuf:"bytes,1,opt,name=Actor,proto3,oneof" json:"Actor,omitempty"`
}

func (x *AddMovieToFilmographyResponse) Reset() {
	*x = AddMovieToFilmographyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMovieToFilmographyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMovieToFilmographyResponse) ProtoMessage() {}

func (x *AddMovieToFilmographyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMovieToFilmographyResponse.ProtoReflect.Descriptor instead.
func (*AddMovieToFilmographyResponse) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{16}
}

func (x *AddMovieToFilmographyResponse) GetActor() *base.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

type RemoveMovieFromFilmographyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorID string `protobuf:"bytes,1,opt,name=ActorID,proto3" json:"ActorID,omitempty"`
	MovieID string `protobuf:"bytes,2,opt,name=MovieID,proto3" json:"MovieID,omitempty"`
}

func (x *RemoveMovieFromFilmographyRequest) Reset() {
	*x = RemoveMovieFromFilmographyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMovieFromFilmographyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMovieFromFilmographyRequest) ProtoMessage() {}

func (x *RemoveMovieFromFilmographyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMovieFromFilmographyRequest.ProtoReflect.Descriptor instead.
func (*RemoveMovieFromFilmographyRequest) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{17}
}

func (x *RemoveMovieFromFilmographyRequest) GetActorID() string {
	if x != nil {
		return x.ActorID
	}
	return ""
}

func (x *RemoveMovieFromFilmographyRequest) GetMovieID() string {
	if x != nil {
		return x.MovieID
	}
	return ""
}

type RemoveMovieFromFilmographyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor *base.Actor `protobuf:"bytes,1,opt,name=Actor,proto3,oneof" json:"Actor,omitempty"`
}

func (x *RemoveMovieFromFilmographyResponse) Reset() {
	*x = RemoveMovieFromFilmographyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMovieFromFilmographyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMovieFromFilmographyResponse) ProtoMessage() {}

func (x *RemoveMovieFromFilmographyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMovieFromFilmographyResponse.ProtoReflect.Descriptor instead.
func (*RemoveMovieFromFilmographyResponse) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveMovieFromFilmographyResponse) GetActor() *base.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

type UpdateFilmographyEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorID string            `protobuf:"bytes,1,opt,name=ActorID,proto3" json:"ActorID,omitempty"`
	MovieID string            `protobuf:"bytes,2,opt,name=MovieID,proto3" json:"MovieID,omitempty"`
	Entry   *FilmographyEntry `protobuf:"bytes,3,opt,name=Entry,proto3" json:"Entry,omitempty"`
}

func (x *UpdateFilmographyEntryRequest) Reset() {
	*x = UpdateFilmographyEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFilmographyEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFilmographyEntryRequest) ProtoMessage() {}

func (x *UpdateFilmographyEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFilmographyEntryRequest.ProtoReflect.Descriptor instead.
func (*UpdateFilmographyEntryRequest) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateFilmographyEntryRequest) GetActorID() string {
	if x != nil {
		return x.ActorID
	}
	return ""
}

func (x *UpdateFilmographyEntryRequest) GetMovieID() string {
	if x != nil {
		return x.MovieID
	}
	return ""
}

func (x *UpdateFilmographyEntryRequest) GetEntry() *FilmographyEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type UpdateFilmographyEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor *base.Actor `protobuf:"bytes,1,opt,name=Actor,proto3,oneof" json:"Actor,omitempty"`
}

func (x *UpdateFilmographyEntryResponse) Reset() {
	*x = UpdateFilmographyEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_actor_actor_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFilmographyEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFilmographyEntryResponse) ProtoMessage() {}

func (x *UpdateFilmographyEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_actor_actor_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFilmographyEntryResponse.ProtoReflect.Descriptor instead.
func (*UpdateFilmographyEntryResponse) Descriptor() ([]byte, []int) {
	return file_service_actor_actor_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateFilmographyEntryResponse) GetActor() *base.Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

var File_service_actor_actor_proto protoreflect.FileDescriptor

var file_service_actor_actor_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2f,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x1a, 0x10, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52,
	0x6f, 0x6c, 0x65, 0x22, 0x3a, 0x0a, 0x08, 0x41, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x41, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x67, 0x65,
	0x54, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x41, 0x67, 0x65, 0x54, 0x6f, 0x22,
	0x8a, 0x03, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x4c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x08, 0x41, 0x67, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x41, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x03, 0x52, 0x08, 0x41, 0x67, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x4e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52,
	0x0b, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x05, 0x52, 0x07, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x04,
	0x52, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x09, 0x49, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49,
	0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x41, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x4e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x49, 0x44, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xf5, 0x02, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x42, 0x69, 0x72, 0x74,
	0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x42, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x44, 0x65, 0x61, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x00, 0x52, 0x09, 0x44, 0x65, 0x61, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x47, 0x0a,
	0x0b, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x46, 0x69, 0x6c, 0x6d, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x44, 0x65, 0x61, 0x74, 0x68,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x48, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x1c,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x45, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x22, 0x53, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x06,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x57, 0x69, 0x74, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0xa8, 0x04,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x21, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x09, 0x42, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x02, 0x52, 0x09, 0x42, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x3d, 0x0a, 0x09, 0x44, 0x65, 0x61, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x03, 0x52, 0x09, 0x44, 0x65, 0x61, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x0b, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0b, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x42, 0x69, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x42,
	0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52,
	0x08, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x0b,
	0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x79, 0x12, 0x21, 0x0a, 0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x09, 0x49, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x42, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x44, 0x65, 0x61, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x42, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x49,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x48, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x22, 0x48, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x75, 0x0a,
	0x1c, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x54, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6c,
	0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x22, 0x57, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x54, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x57, 0x0a,
	0x21, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x49, 0x44, 0x22, 0x5c, 0x0a, 0x22, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05,
	0x41, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x22, 0x90, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x05, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x58, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x32, 0xa9, 0x07, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x22, 0x2e, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x57, 0x69, 0x74, 0x68, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x22, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x15, 0x41, 0x64, 0x64,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x54, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x79, 0x12, 0x31, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x54, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x54, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x1a, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c,
	0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x12, 0x36, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x69,
	0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x32, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x42, 0x5a,
	0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x72, 0x61,
	0x77, 0x61, 0x73, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x32, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x3b, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_actor_actor_proto_rawDescOnce sync.Once
	file_service_actor_actor_proto_rawDescData = file_service_actor_actor_proto_rawDesc
)

func file_service_actor_actor_proto_rawDescGZIP() []byte {
	file_service_actor_actor_proto_rawDescOnce.Do(func() {
		file_service_actor_actor_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_actor_actor_proto_rawDescData)
	})
	return file_service_actor_actor_proto_rawDescData
}

var file_service_actor_actor_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_service_actor_actor_proto_goTypes = []interface{}{
	(*FilmographyEntry)(nil),                   // 0: actor.service.actor.FilmographyEntry
	(*AgeRange)(nil),                           // 1: actor.service.actor.AgeRange
	(*ActorFilter)(nil),                        // 2: actor.service.actor.ActorFilter
	(*CreateRequest)(nil),                      // 3: actor.service.actor.CreateRequest
	(*CreateResponse)(nil),                     // 4: actor.service.actor.CreateResponse
	(*GetRequest)(nil),                         // 5: actor.service.actor.GetRequest
	(*GetResponse)(nil),                        // 6: actor.service.actor.GetResponse
	(*GetAllRequest)(nil),                      // 7: actor.service.actor.GetAllRequest
	(*GetAllResponse)(nil),                     // 8: actor.service.actor.GetAllResponse
	(*GetAllWithFilterRequest)(nil),            // 9: actor.service.actor.GetAllWithFilterRequest
	(*GetAllWithFilterResponse)(nil),           // 10: actor.service.actor.GetAllWithFilterResponse
	(*UpdateRequest)(nil),                      // 11: actor.service.actor.UpdateRequest
	(*UpdateResponse)(nil),                     // 12: actor.service.actor.UpdateResponse
	(*DeleteRequest)(nil),                      // 13: actor.service.actor.DeleteRequest
	(*DeleteResponse)(nil),                     // 14: actor.service.actor.DeleteResponse
	(*AddMovieToFilmographyRequest)(nil),       // 15: actor.service.actor.AddMovieToFilmographyRequest
	(*AddMovieToFilmographyResponse)(nil),      // 16: actor.service.actor.AddMovieToFilmographyResponse
	(*RemoveMovieFromFilmographyRequest)(nil),  // 17: actor.service.actor.RemoveMovieFromFilmographyRequest
	(*RemoveMovieFromFilmographyResponse)(nil), // 18: actor.service.actor.RemoveMovieFromFilmographyResponse
	(*UpdateFilmographyEntryRequest)(nil),      // 19: actor.service.actor.UpdateFilmographyEntryRequest
	(*UpdateFilmographyEntryResponse)(nil),     // 20: actor.service.actor.UpdateFilmographyEntryResponse
	(*timestamppb.Timestamp)(nil),              // 21: google.protobuf.Timestamp
	(*base.Actor)(nil),                         // 22: actor.base.Actor
}
var file_service_actor_actor_proto_depIdxs = []int32{
	1,  // 0: actor.service.actor.ActorFilter.AgeRange:type_name -> actor.service.actor.AgeRange
	21, // 1: actor.service.actor.CreateRequest.BirthDate:type_name -> google.protobuf.Timestamp
	21, // 2: actor.service.actor.CreateRequest.DeathDate:type_name -> google.protobuf.Timestamp
	0,  // 3: actor.service.actor.CreateRequest.Filmography:type_name -> actor.service.actor.FilmographyEntry
	22, // 4: actor.service.actor.CreateResponse.Actor:type_name -> actor.base.Actor
	22, // 5: actor.service.actor.GetResponse.Actor:type_name -> actor.base.Actor
	22, // 6: actor.service.actor.GetAllResponse.Actors:type_name -> actor.base.Actor
	2,  // 7: actor.service.actor.GetAllWithFilterRequest.Filter:type_name -> actor.service.actor.ActorFilter
	22, // 8: actor.service.actor.GetAllWithFilterResponse.Actors:type_name -> actor.base.Actor
	21, // 9: actor.service.actor.UpdateRequest.BirthDate:type_name -> google.protobuf.Timestamp
	21, // 10: actor.service.actor.UpdateRequest.DeathDate:type_name -> google.protobuf.Timestamp
	0,  // 11: actor.service.actor.UpdateRequest.Filmography:type_name -> actor.service.actor.FilmographyEntry
	22, // 12: actor.service.actor.UpdateResponse.Actor:type_name -> actor.base.Actor
	22, // 13: actor.service.actor.DeleteResponse.Actor:type_name -> actor.base.Actor
	0,  // 14: actor.service.actor.AddMovieToFilmographyRequest.Entry:type_name -> actor.service.actor.FilmographyEntry
	22, // 15: actor.service.actor.AddMovieToFilmographyResponse.Actor:type_name -> actor.base.Actor
	22, // 16: actor.service.actor.RemoveMovieFromFilmographyResponse.Actor:type_name -> actor.base.Actor
	0,  // 17: actor.service.actor.UpdateFilmographyEntryRequest.Entry:type_name -> actor.service.actor.FilmographyEntry
	22, // 18: actor.service.actor.UpdateFilmographyEntryResponse.Actor:type_name -> actor.base.Actor
	3,  // 19: actor.service.actor.ActorService.Create:input_type -> actor.service.actor.CreateRequest
	5,  // 20: actor.service.actor.ActorService.Get:input_type -> actor.service.actor.GetRequest
	7,  // 21: actor.service.actor.ActorService.GetAll:input_type -> actor.service.actor.GetAllRequest
	9,  // 22: actor.service.actor.ActorService.GetAllWithFilter:input_type -> actor.service.actor.GetAllWithFilterRequest
	11, // 23: actor.service.actor.ActorService.Update:input_type -> actor.service.actor.UpdateRequest
	13, // 24: actor.service.actor.ActorService.Delete:input_type -> actor.service.actor.DeleteRequest
	15, // 25: actor.service.actor.ActorService.AddMovieToFilmography:input_type -> actor.service.actor.AddMovieToFilmographyRequest
	17, // 26: actor.service.actor.ActorService.RemoveMovieFromFilmography:input_type -> actor.service.actor.RemoveMovieFromFilmographyRequest
	19, // 27: actor.service.actor.ActorService.UpdateFilmographyEntry:input_type -> actor.service.actor.UpdateFilmographyEntryRequest
	4,  // 28: actor.service.actor.ActorService.Create:output_type -> actor.service.actor.CreateResponse
	6,  // 29: actor.service.actor.ActorService.Get:output_type -> actor.service.actor.GetResponse
	8,  // 30: actor.service.actor.ActorService.GetAll:output_type -> actor.service.actor.GetAllResponse
	10, // 31: actor.service.actor.ActorService.GetAllWithFilter:output_type -> actor.service.actor.GetAllWithFilterResponse
	12, // 32: actor.service.actor.ActorService.Update:output_type -> actor.service.actor.UpdateResponse
	14, // 33: actor.service.actor.ActorService.Delete:output_type -> actor.service.actor.DeleteResponse
	16, // 34: actor.service.actor.ActorService.AddMovieToFilmography:output_type -> actor.service.actor.AddMovieToFilmographyResponse
	18, // 35: actor.service.actor.ActorService.RemoveMovieFromFilmography:output_type -> actor.service.actor.RemoveMovieFromFilmographyResponse
	20, // 36: actor.service.actor.ActorService.UpdateFilmographyEntry:output_type -> actor.service.actor.UpdateFilmographyEntryResponse
	28, // [28:37] is the sub-list for method output_type
	19, // [19:28] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_service_actor_actor_proto_init() }
func file_service_actor_actor_proto_init() {
	if File_service_actor_actor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_actor_actor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmographyEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgeRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllWithFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllWithFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMovieToFilmographyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMovieToFilmographyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMovieFromFilmographyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveMovieFromFilmographyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFilmographyEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_actor_actor_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFilmographyEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_service_actor_actor_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_service_actor_actor_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_service_actor_actor_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_service_actor_actor_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_service_actor_actor_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_service_actor_actor_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_service_actor_actor_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_service_actor_actor_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_service_actor_actor_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_service_actor_actor_proto_msgTypes[20].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_actor_actor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_actor_actor_proto_goTypes,
		DependencyIndexes: file_service_actor_actor_proto_depIdxs,
		MessageInfos:      file_service_actor_actor_proto_msgTypes,
	}.Build()
	File_service_actor_actor_proto = out.File
	file_service_actor_actor_proto_rawDesc = nil
	file_service_actor_actor_proto_goTypes = nil
	file_service_actor_actor_proto_depIdxs = nil
}
