// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: base/actor.proto

package base

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Actor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FirstName   string                 `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName    string                 `protobuf:"bytes,3,opt,name=LastName,proto3" json:"LastName,omitempty"`
	BirthDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=BirthDate,proto3" json:"BirthDate,omitempty"`
	DeathDate   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=DeathDate,proto3,oneof" json:"DeathDate,omitempty"` // Pointer since it could be nil for living actors
	Nationality string                 `protobuf:"bytes,6,opt,name=Nationality,proto3" json:"Nationality,omitempty"`
	Biography   string                 `protobuf:"bytes,7,opt,name=Biography,proto3" json:"Biography,omitempty"`
	ImageURL    string                 `protobuf:"bytes,8,opt,name=ImageURL,proto3" json:"ImageURL,omitempty"`       // URL to actor's image
	Filmography []*FilmographyEntry    `protobuf:"bytes,9,rep,name=Filmography,proto3" json:"Filmography,omitempty"` // Movies they participated in with their roles
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	IsDeleted   bool                   `protobuf:"varint,12,opt,name=IsDeleted,proto3" json:"IsDeleted,omitempty"`
}

func (x *Actor) Reset() {
	*x = Actor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_actor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Actor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actor) ProtoMessage() {}

func (x *Actor) ProtoReflect() protoreflect.Message {
	mi := &file_base_actor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actor.ProtoReflect.Descriptor instead.
func (*Actor) Descriptor() ([]byte, []int) {
	return file_base_actor_proto_rawDescGZIP(), []int{0}
}

func (x *Actor) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Actor) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Actor) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Actor) GetBirthDate() *timestamppb.Timestamp {
	if x != nil {
		return x.BirthDate
	}
	return nil
}

func (x *Actor) GetDeathDate() *timestamppb.Timestamp {
	if x != nil {
		return x.DeathDate
	}
	return nil
}

func (x *Actor) GetNationality() string {
	if x != nil {
		return x.Nationality
	}
	return ""
}

func (x *Actor) GetBiography() string {
	if x != nil {
		return x.Biography
	}
	return ""
}

func (x *Actor) GetImageURL() string {
	if x != nil {
		return x.ImageURL
	}
	return ""
}

func (x *Actor) GetFilmography() []*FilmographyEntry {
	if x != nil {
		return x.Filmography
	}
	return nil
}

func (x *Actor) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Actor) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Actor) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

type FilmographyEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieID   string `protobuf:"bytes,1,opt,name=MovieID,proto3" json:"MovieID,omitempty"`
	Character string `protobuf:"bytes,2,opt,name=Character,proto3" json:"Character,omitempty"` // The character they played (empty for crew)
	Role      string `protobuf:"bytes,3,opt,name=Role,proto3" json:"Role,omitempty"`           // "Actor" or crew role (Director, Producer, etc.)
}

func (x *FilmographyEntry) Reset() {
	*x = FilmographyEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_actor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmographyEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmographyEntry) ProtoMessage() {}

func (x *FilmographyEntry) ProtoReflect() protoreflect.Message {
	mi := &file_base_actor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmographyEntry.ProtoReflect.Descriptor instead.
func (*FilmographyEntry) Descriptor() ([]byte, []int) {
	return file_base_actor_proto_rawDescGZIP(), []int{1}
}

func (x *FilmographyEntry) GetMovieID() string {
	if x != nil {
		return x.MovieID
	}
	return ""
}

func (x *FilmographyEntry) GetCharacter() string {
	if x != nil {
		return x.Character
	}
	return ""
}

func (x *FilmographyEntry) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

var File_base_actor_proto protoreflect.FileDescriptor

var file_base_actor_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x86, 0x04, 0x0a, 0x05, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x42, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x42, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a,
	0x09, 0x44, 0x65, 0x61, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09,
	0x44, 0x65, 0x61, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b,
	0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x42, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x42, 0x69, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x3e, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x6d,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x6f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x46, 0x69, 0x6c,
	0x6d, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x44,
	0x65, 0x61, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x22, 0x5e, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x6d,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x72, 0x61, 0x77, 0x61, 0x73, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x2f, 0x61, 0x70, 0x32, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x3b, 0x62, 0x61,
	0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_base_actor_proto_rawDescOnce sync.Once
	file_base_actor_proto_rawDescData = file_base_actor_proto_rawDesc
)

func file_base_actor_proto_rawDescGZIP() []byte {
	file_base_actor_proto_rawDescOnce.Do(func() {
		file_base_actor_proto_rawDescData = protoimpl.X.CompressGZIP(file_base_actor_proto_rawDescData)
	})
	return file_base_actor_proto_rawDescData
}

var file_base_actor_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_base_actor_proto_goTypes = []interface{}{
	(*Actor)(nil),                 // 0: actor.base.Actor
	(*FilmographyEntry)(nil),      // 1: actor.base.FilmographyEntry
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_base_actor_proto_depIdxs = []int32{
	2, // 0: actor.base.Actor.BirthDate:type_name -> google.protobuf.Timestamp
	2, // 1: actor.base.Actor.DeathDate:type_name -> google.protobuf.Timestamp
	1, // 2: actor.base.Actor.Filmography:type_name -> actor.base.FilmographyEntry
	2, // 3: actor.base.Actor.CreatedAt:type_name -> google.protobuf.Timestamp
	2, // 4: actor.base.Actor.UpdatedAt:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_base_actor_proto_init() }
func file_base_actor_proto_init() {
	if File_base_actor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_base_actor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Actor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_actor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmographyEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_base_actor_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_base_actor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_base_actor_proto_goTypes,
		DependencyIndexes: file_base_actor_proto_depIdxs,
		MessageInfos:      file_base_actor_proto_msgTypes,
	}.Build()
	File_base_actor_proto = out.File
	file_base_actor_proto_rawDesc = nil
	file_base_actor_proto_goTypes = nil
	file_base_actor_proto_depIdxs = nil
}
